import Foundation

//MARK: - рЃАрЃљрЃЋрЃљрЃџрЃЊрЃћрЃЉрЃБрЃџрЃЮ рЃљрЃЏрЃЮрЃфрЃљрЃюрЃћрЃЉрЃў.

/* 1.
 рЃерЃћрЃЋрЃЦрЃЏрЃюрЃљрЃЌ Class Book.
 Properties: bookID(рЃБрЃюрЃўрЃЎрЃљрЃџрЃБрЃарЃў рЃўрЃЊрЃћрЃюрЃбрЃўрЃцрЃўрЃЎрЃљрЃбрЃЮрЃарЃў Int), String title, String author, Bool isBorrowed.
 Designated Init.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃгрЃўрЃњрЃюрЃА рЃарЃЮрЃњрЃЮрЃарЃф borrowed-рЃА.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃюрЃўрЃерЃюрЃљрЃЋрЃА рЃгрЃўрЃњрЃюрЃА рЃарЃЮрЃњрЃЮрЃарЃф рЃЊрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃБрЃџрЃА.
 */

class Book {
    let bookID: Int
    var title: String
    var author: String
    var isBorrowed: Bool
    
    init(bookID: Int, title: String, author: String, isBorrowed: Bool = false) {
        self.bookID = bookID
        self.title = title
        self.author = author
        self.isBorrowed = isBorrowed
    }
    
    func bookBorrowed() {
        isBorrowed = true
    }
    
    func bookReturned() {
        isBorrowed = false
    }
}

/* 2.
 рЃерЃћрЃЋрЃЦрЃЏрЃюрЃљрЃЌ Class Owner
 Properties: ownerId(рЃБрЃюрЃўрЃЎрЃљрЃџрЃБрЃарЃў рЃўрЃЊрЃћрЃюрЃбрЃўрЃцрЃўрЃЎрЃљрЃбрЃЮрЃарЃў Int), String name, Books Array рЃАрЃљрЃ«рЃћрЃџрЃўрЃЌ borrowedBooks.
 Designated Init.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃФрЃџрЃћрЃЋрЃА рЃБрЃцрЃџрЃћрЃЉрЃљрЃА рЃарЃЮрЃЏ рЃљрЃўрЃдрЃЮрЃА рЃгрЃўрЃњрЃюрЃў рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃўрЃЊрЃљрЃю.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃФрЃџрЃћрЃЋрЃА рЃБрЃцрЃџрЃћрЃЉрЃљрЃА рЃарЃЮрЃЏ рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃЮрЃА рЃгрЃљрЃдрЃћрЃЉрЃБрЃџрЃў рЃгрЃўрЃњрЃюрЃў.
 */

class Owner {
    let ownerId: Int
    var name: String
    var borrowedBooks: [Book]
    
    init(ownerId: Int, name: String) {
        self.ownerId = ownerId
        self.name = name
        self.borrowedBooks = []
    }
    
    func borrowBook(book: Book) {
        guard !book.isBorrowed else {
            print("рЃћрЃА рЃгрЃўрЃњрЃюрЃў рЃБрЃЎрЃЋрЃћ рЃюрЃљрЃЌрЃ«рЃЮрЃЋрЃюрЃўрЃљ.")
            return
        }
        
        borrowedBooks.append(book)
        book.bookBorrowed()
    }
    
    func returnBook(book: Book) {
        guard let index = borrowedBooks.firstIndex(where: { $0.bookID == book.bookID }) else {
            print("\(name) рЃћрЃА рЃгрЃўрЃњрЃюрЃў рЃљрЃа рЃБрЃЌрЃ«рЃЮрЃЋрЃюрЃўрЃљ.")
            return
        }
        
        borrowedBooks.remove(at: index)
        book.bookReturned()
    }
}

/* 3.
 рЃерЃћрЃЋрЃЦрЃЏрЃюрЃљрЃЌ Class Library
 Properties: Books Array, Owners Array.
 Designated Init.
 Method рЃгрЃўрЃњрЃюрЃўрЃА рЃЊрЃљрЃЏрЃљрЃбрЃћрЃЉрЃљ, рЃарЃљрЃЌрЃљ рЃЕрЃЋрЃћрЃюрЃў рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃљ рЃерЃћрЃЋрЃљрЃЋрЃАрЃЮрЃЌ рЃгрЃўрЃњрЃюрЃћрЃЉрЃўрЃЌ.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃљрЃерЃў рЃљрЃЏрЃљрЃбрЃћрЃЉрЃА Owner-рЃА.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃърЃЮрЃБрЃџрЃЮрЃЉрЃА рЃЊрЃљ рЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃДрЃЋрЃћрЃџрЃљ рЃ«рЃћрЃџрЃЏрЃўрЃАрЃљрЃгрЃЋрЃЊрЃЮрЃЏ рЃгрЃўрЃњрЃюрЃА.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃърЃЮрЃБрЃџрЃЮрЃЉрЃА рЃЊрЃљ рЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃДрЃЋрЃћрЃџрЃљ рЃгрЃљрЃдрЃћрЃЉрЃБрЃџ рЃгрЃўрЃњрЃюрЃА.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃћрЃФрЃћрЃЉрЃА Owner-рЃА рЃЌрЃљрЃЋрЃўрЃАрЃў рЃљрЃўрЃЊрЃўрЃЌ рЃЌрЃБ рЃћрЃњрЃћрЃЌрЃў рЃљрЃарЃАрЃћрЃЉрЃЮрЃЉрЃА.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃћрЃФрЃћрЃЉрЃА рЃгрЃљрЃдрЃћрЃЉрЃБрЃџ рЃгрЃўрЃњрЃюрЃћрЃЉрЃА рЃЎрЃЮрЃюрЃЎрЃарЃћрЃбрЃБрЃџрЃў Owner-рЃўрЃА рЃЏрЃўрЃћрЃа.
 Method рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃљрЃФрЃџрЃћрЃЋрЃА рЃБрЃцрЃџрЃћрЃЉрЃљрЃА Owner-рЃА рЃгрЃљрЃљрЃдрЃћрЃЉрЃўрЃюрЃЮрЃА рЃгрЃўрЃњрЃюрЃў рЃЌрЃБ рЃўрЃА рЃЌрЃљрЃЋрЃўрЃАрЃБрЃцрЃљрЃџрЃўрЃљ.
 */

class Library {
    var books: [Book]
    var owners: [Owner]

    init() {
        self.books = []
        self.owners = []
    }

    // рЃгрЃўрЃњрЃюрЃўрЃА рЃЊрЃљрЃЏрЃљрЃбрЃћрЃЉрЃљ.
    func addBook(book: Book) {
        self.books.append(book)
    }

    // Owner-рЃўрЃА рЃЊрЃљрЃЏрЃљрЃбрЃћрЃЉрЃљ
    func addOwner(owner: Owner) {
        self.owners.append(owner)
    }

    // рЃДрЃЋрЃћрЃџрЃљ рЃ«рЃћрЃџрЃЏрЃўрЃАрЃљрЃгрЃЋрЃЊрЃЮрЃЏрЃў рЃгрЃўрЃњрЃюрЃў.
    func availableBooks() -> [Book] {
        return books.filter { !$0.isBorrowed }
    }

    // рЃДрЃЋрЃћрЃџрЃљ borrowed рЃгрЃўрЃњрЃюрЃў.
    func listBorrowedBooks() -> [Book] {
        return books.filter { $0.isBorrowed }
    }

    // рЃФрЃўрЃћрЃЉрЃљ ID'рЃА рЃЏрЃўрЃ«рЃћрЃЊрЃЋрЃўрЃЌ.
    func findOwner(byId ownerId: Int) -> Owner? {
        return owners.first { $0.ownerId == ownerId }
    }

    // рЃФрЃўрЃћрЃЉрЃљ Owner-рЃўрЃА рЃЏрЃўрЃ«рЃћрЃЊрЃЋрЃўрЃЌ.
    func findBorrowedBooks(byOwner owner: Owner) -> [Book] {
        return owner.borrowedBooks
    }

    func borrowBook(bookId: Int, byOwner ownerId: Int) {
        guard let book = books.first(where: { $0.bookID == bookId && !$0.isBorrowed }) else {
            print("рЃгрЃўрЃњрЃюрЃў рЃ«рЃћрЃџрЃЏрЃўрЃАрЃљрЃгрЃЋрЃЊрЃЮрЃЏрЃў рЃљрЃарЃљрЃљ, рЃўрЃЏрЃўрЃАрЃљрЃЌрЃЋрЃўрЃА рЃарЃЮрЃЏ рЃўрЃЌрЃ«рЃЮрЃЋрЃЮрЃЌ.")
            return
        }
        guard let owner = findOwner(byId: ownerId) else {
            print("Owner рЃЋрЃћрЃа рЃЏрЃЮрЃўрЃФрЃћрЃЉрЃюрЃљ.")
            return
        }
        owner.borrowBook(book: book)
    }
}

/* 4.
 рЃњрЃљрЃЋрЃљрЃЎрЃћрЃЌрЃЮрЃЌ рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃўрЃА рЃАрЃўрЃЏрЃБрЃџрЃљрЃфрЃўрЃљ.
 рЃерЃћрЃЋрЃЦрЃЏрЃюрЃљрЃЌ рЃарЃљрЃЏрЃЮрЃЊрЃћрЃюрЃўрЃЏрЃћ рЃгрЃўрЃњрЃюрЃў рЃЊрЃљ рЃарЃљрЃЏрЃЮрЃЊрЃћрЃюрЃўрЃЏрЃћ Owner-рЃў, рЃерЃћрЃЋрЃЦрЃЏрЃюрЃљрЃЌ рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃљ.
 рЃЊрЃљрЃЋрЃљрЃЏрЃљрЃбрЃЮрЃЌ рЃгрЃўрЃњрЃюрЃћрЃЉрЃў рЃЊрЃљ Owner-рЃћрЃЉрЃў рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃљрЃерЃў
 рЃгрЃљрЃЋрЃљрЃдрЃћрЃЉрЃўрЃюрЃЮрЃЌ Owner-рЃћрЃЉрЃА рЃгрЃўрЃњрЃюрЃћрЃЉрЃў рЃЊрЃљ рЃЊрЃљрЃЋрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃўрЃюрЃЮрЃЌ рЃарЃљрЃдрЃљрЃф рЃюрЃљрЃгрЃўрЃџрЃў.
 рЃЊрЃљрЃЋрЃЉрЃћрЃГрЃЊрЃЮрЃЌ рЃўрЃюрЃцрЃЮрЃарЃЏрЃљрЃфрЃўрЃљ рЃЉрЃўрЃЉрЃџрЃўрЃЮрЃЌрЃћрЃЎрЃўрЃЊрЃљрЃю рЃгрЃљрЃдрЃћрЃЉрЃБрЃџ рЃгрЃўрЃњрЃюрЃћрЃЉрЃќрЃћ, рЃ«рЃћрЃџрЃЏрЃўрЃАрЃљрЃгрЃЋрЃЊрЃЮрЃЏ рЃгрЃўрЃњрЃюрЃћрЃЉрЃќрЃћ рЃЊрЃљ рЃњрЃљрЃЏрЃЮрЃЋрЃўрЃбрЃљрЃюрЃЮрЃЌ рЃгрЃљрЃдрЃћрЃЉрЃБрЃџрЃў рЃгрЃўрЃњрЃюрЃћрЃЉрЃў рЃЎрЃЮрЃюрЃЎрЃарЃћрЃбрЃБрЃџрЃљрЃЊ рЃћрЃарЃЌрЃў Owner-рЃўрЃА рЃЏрЃўрЃћрЃа.
 */

let book1 = Book(bookID: 1, title: "how too be lamara.", author: "(Lamara deida)")
let book2 = Book(bookID: 2, title: "Tengo in action", author: "(Tengizi bidzia)")
let book3 = Book(bookID: 3, title: "popurebi da qeipebi", author: "(Dato Gomarteli)")

let owner1 = Owner(ownerId: 1, name: "Owner Name: Jumberi")
let owner2 = Owner(ownerId: 2, name: "Owner Name: Gela")

//library.

let library = Library()
library.addBook(book: book1)
library.addBook(book: book2)
library.addBook(book: book3)

library.addOwner(owner: owner1)
library.addOwner(owner: owner2)

// рЃгрЃўрЃњрЃюрЃћрЃЉрЃўрЃА рЃгрЃљрЃдрЃћрЃЉрЃљ рЃЊрЃљ рЃЊрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃљ

owner1.borrowBook(book: book1)
owner2.borrowBook(book: book2)

// Owner:

owner1.returnBook(book: book1) // рЃљрЃЦ рЃџрЃљрЃЏрЃљрЃарЃљрЃА рЃгрЃўрЃњрЃюрЃў рЃЊрЃљрЃЉрЃарЃБрЃюрЃЊрЃљ рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃљрЃЊ Available: рЃўрЃАрЃћрЃЋ рЃџрЃљрЃЏрЃљрЃарЃљ рЃЊрЃљ рЃЊрЃљрЃЌрЃЮ рЃњрЃЮрЃЏрЃљрЃарЃЌрЃћрЃџрЃўрЃљ. рЃЌрЃћрЃюрЃњрЃЮ рЃљрЃа рЃЊрЃљрЃўрЃърЃарЃўрЃюрЃбрЃћрЃЉрЃљ.

// рЃћрЃА рЃгрЃўрЃњрЃюрЃћрЃЉрЃў рЃњрЃЋрЃљрЃЦрЃЋрЃА.

print("Available ­ЪЊџ:")
for book in library.availableBooks() {
    print("- \(book.title) by \(book.author)")
}

// рЃгрЃўрЃњрЃюрЃћрЃЉрЃў, рЃарЃЮрЃЏрЃџрЃћрЃЉрЃўрЃф рЃњрЃљрЃфрЃћрЃЏрЃБрЃџрЃўрЃљ.

print("\nBorrowed ­ЪЊџ:")
for book in library.listBorrowedBooks() {
    print("- \(book.title) by \(book.author)")
}

print("\nBooks Borrowed by Gela:")
for book in owner2.borrowedBooks {
    print("- \(book.title) by \(book.author)")
}


//MARK: - рЃљрЃарЃљрЃАрЃљрЃЋрЃљрЃџрЃЊрЃћрЃЉрЃБрЃџрЃЮ рЃљрЃЏрЃЮрЃфрЃљрЃюрЃћрЃЉрЃў.

/*
 рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЎрЃџрЃљрЃАрЃў рЃњрЃљрЃЏрЃЮрЃюрЃљрЃЌрЃЦрЃЋрЃљрЃЏрЃћрЃЉрЃўрЃА рЃњрЃћрЃюрЃћрЃарЃљрЃбрЃЮрЃарЃў, рЃАрЃљрЃЊрЃљрЃф рЃњрЃљрЃюрЃЏрЃљрЃарЃбрЃљрЃЋрЃЌ рЃњрЃљрЃЏрЃЮрЃюрЃљрЃЌрЃЦрЃЋрЃљрЃЏрЃА-рЃА рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃўрЃЦрЃюрЃћрЃЉрЃљ рЃАрЃбрЃарЃўрЃюрЃњрЃћрЃЉрЃўрЃАрЃњрЃљрЃю рЃерЃћрЃЏрЃЊрЃњрЃљрЃарЃў рЃЎрЃЮрЃџрЃћрЃЦрЃфрЃўрЃљ. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў рЃАрЃљрЃЊрЃљрЃф рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃЌ рЃерЃћрЃарЃЕрЃћрЃЋрЃўрЃЌрЃљрЃЊ рЃАрЃ«рЃЋрЃљрЃЊрЃљрЃАрЃ«рЃЋрЃљ рЃ»рЃЮрЃБрЃЦрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃЌ рЃЏрЃљрЃА, рЃљрЃАрЃћрЃЋрЃћ рЃЕрЃљрЃљрЃЏрЃљрЃбрЃћрЃЌ рЃЏрЃћрЃЌрЃЮрЃЊрЃў, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЕрЃљрЃАрЃЋрЃљрЃЏрЃА рЃљрЃю рЃљрЃЏрЃЮрЃљрЃЎрЃџрЃћрЃЉрЃА рЃњрЃљрЃЏрЃЮрЃюрЃљрЃЌрЃЦрЃЋрЃљрЃЏрЃА рЃАрЃўрЃўрЃЊрЃљрЃю.
 */

class ExpressionGenerator {
    var expressions: [String]

    init(expressions: [String]) {
        self.expressions = expressions
    }

    func addExpression(newExpression: String) {
        expressions.append(newExpression)
    }

    func removeExpression(expressionToRemove: String) {
        expressions = expressions.filter { $0 != expressionToRemove }
    }

    func showRandomExpression() {
        guard !expressions.isEmpty else {
            print("No expressions available.")
            return
        }
        if let randomExpression = expressions.randomElement() {
            print(randomExpression)
        }
    }
}

let killerExpressions = [
    "рЃЊрЃљрЃЋрЃўрЃюрЃљрЃ«рЃћ рЃЌрЃБ рЃљрЃарЃљ рЃЏрЃўрЃЋрЃ«рЃЋрЃЊрЃў, рЃарЃЮрЃЏ РђЊ 'рЃЊрЃћрЃЋрЃўрЃдрЃБрЃърЃћ.'",
    "рЃўрЃАрЃћрЃЌрЃў рЃљрЃцрЃћрЃарЃўрЃАрЃбрЃўрЃљ, рЃарЃЮрЃЏ рЃЉрЃљрЃюрЃЎрЃЮрЃЏрЃљрЃбрЃћрЃЉрЃўрЃф рЃЎрЃў рЃљрЃФрЃџрЃћрЃЋрЃћрЃю рЃцрЃБрЃџрЃА рЃЋрЃљрЃџрЃљрЃЊ",
    "рЃАрЃБрЃџрЃўрЃА рЃбрЃЎрЃўрЃЋрЃўрЃџрЃљрЃЏрЃЊрЃћ рЃЋрЃбрЃЎрЃўрЃЋрЃўрЃџрЃЮрЃЉРђд",
    "рЃўрЃЏрЃћрЃЊрЃўрЃА рЃерЃБрЃЦрЃў рЃЕрЃљрЃЏрЃўрЃЦрЃарЃљ рЃЋрЃўрЃюрЃЏрЃћрЃЏ рЃљрЃАрЃљрЃюрЃЌрЃў рЃЏрЃљрЃЌрЃ«рЃЮрЃЋрЃћрЃЌ",
    "рЃљрЃарЃљрЃЋрЃўрЃюрЃљрЃљ рЃБрЃюрЃўрЃЎрЃљрЃџрЃБрЃарЃўРђдрЃЏрЃћ рЃљрЃарЃљрЃЋрЃўрЃю рЃЋрЃљрЃаРђдрЃћ.рЃў рЃБрЃюрЃўрЃЎрЃљрЃџрЃБрЃарЃў рЃЋрЃљрЃа",
    "рЃцрЃБрЃџрЃўрЃА рЃгрЃЋрЃўрЃЏрЃљ рЃарЃЮрЃЏ рЃЏрЃЮрЃЊрЃўрЃЮрЃЊрЃћрЃА рЃюрЃўрЃАрЃўрЃћрЃЉрЃўрЃА рЃарЃЋрЃћрЃБрЃџрЃў рЃЊрЃљрЃЏрЃћрЃфрЃћрЃЏрЃљ рЃЌрЃљрЃЋрЃќрЃћ",
    "рЃЌрЃЦрЃЋрЃћрЃю рЃЏрЃЮрЃ░рЃЎрЃљрЃџрЃўрЃЌ рЃФрЃћрЃарЃљ?",
    "рЃЉрЃћрЃЉрЃўрЃљрЃљрЃљ... рЃЉрЃћрЃЉрЃўрЃљ... рЃЮрЃџрЃўрЃљ рЃЏрЃљрЃЌрЃ«рЃЮрЃЋрЃљрЃарЃў рЃЏрЃћрЃЋрЃўрЃЊрЃљ...",
    "рЃЏрЃќрЃћ рЃљрЃдрЃљрЃа рЃљрЃЏрЃЮрЃЊрЃўрЃА рЃЕрЃљрЃњрЃЋрЃўрЃГрЃарЃћрЃА"
]

let generator = ExpressionGenerator(expressions: killerExpressions)

generator.addExpression(newExpression: "рЃфрЃ«рЃЮрЃЋрЃарЃћрЃЉрЃљ рЃгрЃўрЃњрЃюрЃўрЃљ, рЃЌрЃўрЃЌрЃЮрЃћрЃБрЃџрЃў рЃњрЃЋрЃћрЃарЃЊрЃў рЃљрЃ«рЃљрЃџрЃў рЃЌрЃљрЃЋрЃў.")
generator.removeExpression(expressionToRemove: "рЃЏрЃќрЃћ рЃљрЃдрЃљрЃа рЃљрЃЏрЃЮрЃЊрЃўрЃА рЃЕрЃљрЃњрЃЋрЃўрЃГрЃарЃћрЃА")

generator.showRandomExpression()
