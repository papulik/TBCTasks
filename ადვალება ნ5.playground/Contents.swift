import Foundation

//MARK: - рЃАрЃљрЃЋрЃљрЃџрЃЊрЃћрЃЉрЃБрЃџрЃЮ рЃљрЃЏрЃЮрЃфрЃљрЃюрЃћрЃЉрЃў

// 1. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃљрЃЊ рЃЏрЃўрЃўрЃдрЃћрЃЉрЃА String-рЃА рЃЊрЃљ рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЉрЃБрЃџрЃўрЃљрЃюрЃА. рЃцрЃБрЃюрЃЦрЃфрЃўрЃљрЃЏ рЃБрЃюрЃЊрЃљ рЃерЃћрЃљрЃЏрЃЮрЃгрЃЏрЃЮрЃА рЃЏрЃўрЃдрЃћрЃЉрЃБрЃџрЃў рЃАрЃбрЃарЃўрЃюрЃњрЃў рЃАрЃљрЃарЃЎрЃўрЃАрЃћрЃЉрЃБрЃарЃўрЃљ рЃЌрЃБ рЃљрЃарЃљ (рЃАрЃўрЃбрЃДрЃЋрЃљ рЃљрЃю рЃгрЃўрЃюрЃљрЃЊрЃљрЃЊрЃћрЃЉрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃўрЃЎрЃўрЃЌрЃ«рЃћрЃЉрЃљ рЃћрЃарЃЌрЃюрЃљрЃўрЃарЃљрЃЊ рЃарЃЮрЃњрЃЮрЃарЃф рЃЌрЃљрЃЋрЃўрЃЊрЃљрЃю, рЃўрЃАрЃћ рЃЉрЃЮрЃџрЃЮрЃЊрЃљрЃю рЃЏрЃљрЃњ: РђюрЃљрЃюрЃљРђЮ, РђюрЃљрЃўрЃарЃћрЃЋрЃў рЃўрЃЋрЃћрЃарЃўрЃљРђЮ, РђюрЃЏрЃљрЃЊрЃљрЃЏРђЮ)

let palindromeText = "airevi iveria"

func isPalindrome(text: String) -> Bool {
    
    if text == String(text.reversed()) {
        return true
    } else {
        return false
    }
}

print(isPalindrome(text: palindromeText))

// 2. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃЊрЃљрЃфрЃћрЃЏрЃБрЃџ рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃўрЃА array-рЃА рЃљрЃљрЃЎрЃЋрЃљрЃарЃЊрЃљрЃбрЃћрЃЉрЃА, рЃЊрЃљрЃърЃарЃўрЃюрЃбрЃљрЃЋрЃА рЃЊрЃљ рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА.

func squearing(array: [Int]) -> [Int] {
    
    var squaredNumber = array.map { element in
        element * element
    }
    
    return squaredNumber
}

let printArray = squearing(array: [2,4,6])

print(printArray)

// 3. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ Closure рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃцрЃўрЃџрЃбрЃарЃљрЃЋрЃА рЃџрЃБрЃг рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃА Int-рЃћрЃЉрЃўрЃА Array-рЃЊрЃљрЃю.

var filteringClosure: ([Int]) -> [Int] = { evenNumbers -> [Int] in
    var filteredArray = evenNumbers.filter { number in
        number % 2 == 0
    }
    return filteredArray
}

let result = filteringClosure([2,4,6,5,7,8])
print(result)

// 4. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃљрЃЊ рЃўрЃдрЃћрЃЉрЃА Int-рЃћрЃЉрЃўрЃА рЃЏрЃљрЃАрЃўрЃЋрЃА. Escaping closure-рЃўрЃА рЃЏрЃћрЃерЃЋрЃћрЃЮрЃЉрЃўрЃЌ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃЏрЃўрЃгрЃЮрЃЊрЃћрЃЉрЃБрЃџрЃў рЃЏрЃљрЃАрЃўрЃЋрЃўрЃА рЃ»рЃљрЃЏрЃў 5 рЃгрЃљрЃЏрЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ. рЃЊрЃљрЃарЃгрЃЏрЃБрЃюрЃЊрЃўрЃЌ рЃарЃЮрЃЏ closure рЃљрЃарЃўрЃА escaping рЃЊрЃљ рЃњрЃљрЃЏрЃЮрЃўрЃФрЃљрЃ«рЃћрЃЌ рЃўрЃА рЃЏрЃљрЃА рЃерЃћрЃЏрЃЊрЃћрЃњ рЃарЃљрЃф рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃЊрЃљрЃЉрЃарЃБрЃюрЃЊрЃћрЃЉрЃљ.

func printArraySumAfterDelay(array: [Int], completed: @escaping () -> Void) {
    let sum = array.reduce(0, +)
    
    DispatchQueue.main.asyncAfter(deadline: .now() + 5) {
        print("рЃЏрЃљрЃАрЃўрЃЋрЃўрЃА рЃ»рЃљрЃЏрЃўрЃљ: \(sum)")
        completed()
    }
    
    print("­Ъћ┤­Ъћ┤Testing­Ъћ┤­Ъћ┤")
}


printArraySumAfterDelay(array: [1, 2, 3, 4, 5]) {
    print("­ЪЪб­ЪЪбSuccess­ЪЪб­ЪЪб")
}

// 5. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ  рЃЎрЃЮрЃюрЃбрЃљрЃЦрЃбрЃћрЃЉрЃўрЃА Dict рЃАрЃљрЃЊрЃљрЃф key рЃљрЃарЃўрЃА рЃАрЃљрЃ«рЃћрЃџрЃў рЃЊрЃљ value рЃбрЃћрЃџрЃћрЃцрЃЮрЃюрЃўрЃА рЃюрЃЮрЃЏрЃћрЃарЃў, рЃЊрЃљрЃљрЃЏрЃљрЃбрЃћрЃЌ, рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ/рЃЏрЃЮрЃФрЃћрЃЉрЃюрЃћрЃЌ рЃЊрЃљ рЃгрЃљрЃерЃљрЃџрЃћрЃЌ рЃЎрЃЮрЃюрЃбрЃљрЃЦрЃбрЃў

var contactsList: [String: Int] = [:]

func addNumber(name: String, number: Int) {
    let numberString = String(number) //numberString рЃЋрЃўрЃДрЃћрЃюрЃћрЃЉ рЃўрЃЏрЃўрЃАрЃљрЃЌрЃЋрЃўрЃА, рЃарЃЮрЃЏ рЃюрЃЮрЃЏрЃарЃћрЃЉрЃў рЃўрЃДрЃЮрЃА 9 рЃюрЃўрЃерЃюрЃљ. рЃћрЃА рЃљрЃЏрЃЮрЃфрЃљрЃюрЃўрЃА рЃЏрЃЮрЃЌрЃ«рЃЮрЃЋрЃюрЃљ рЃљрЃарЃљрЃљ.
    
    if numberString.count == 9 {
        contactsList[name] = number
        print("\(name) рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃЊрЃљрЃћрЃЏрЃљрЃбрЃљ РюЁ.")
    } else {
        print("рЃюрЃЮрЃЏрЃћрЃарЃў рЃБрЃюрЃЊрЃљ рЃерЃћрЃЊрЃњрЃћрЃЉрЃЮрЃЊрЃћрЃА 9 рЃюрЃўрЃерЃюрЃўрЃАрЃњрЃљрЃю, рЃњрЃЌрЃ«рЃЮрЃЋрЃЌ рЃерЃћрЃўрЃДрЃЋрЃљрЃюрЃЮрЃЌ 9 рЃюрЃўрЃерЃюрЃљ рЃюрЃЮрЃЏрЃћрЃарЃў ­ЪДљ.")
    }
}

func findContact(name: String) {
    if let number = contactsList[name] {
        print("\(name): \(number)")
    } else {
        print("\(name) - рЃљрЃЏ рЃАрЃљрЃ«рЃћрЃџрЃўрЃЌ рЃюрЃЮрЃЏрЃћрЃарЃў рЃЋрЃћрЃа рЃЏрЃЮрЃўрЃФрЃћрЃЉрЃюрЃљ, рЃАрЃфрЃљрЃЊрЃћрЃЌ рЃЎрЃўрЃЊрЃћрЃЋ рЃћрЃарЃЌрЃ«рЃћрЃџ.")
    }
}

func deleteContact(name: String) {
    if let _ = contactsList.removeValue(forKey: name) {
        print("\(name) - рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃгрЃљрЃўрЃерЃљрЃџрЃљ.")
    } else {
        print("\(name) - рЃљрЃЏ рЃАрЃљрЃ«рЃћрЃџрЃўрЃЌ рЃюрЃЮрЃЏрЃћрЃарЃў рЃЋрЃћрЃа рЃЏрЃЮрЃўрЃФрЃћрЃЉрЃюрЃљ рЃарЃЮрЃЏ рЃгрЃљрЃўрЃерЃљрЃџрЃЮрЃА ­ЪЋх№ИЈРђЇРЎѓ№ИЈ.")
    }
}

addNumber(name: "zuka", number: 599256060)
addNumber(name: "ana", number: 599111111)

findContact(name: "zuka")

deleteContact(name: "zuka")

// 6. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃљрЃЊ рЃўрЃдрЃћрЃЉрЃА [String: Int] рЃбрЃўрЃърЃўрЃА Dictionary-рЃА рЃЊрЃљ рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃљрЃюрЃЉрЃљрЃюрЃБрЃарЃљрЃЊ рЃЊрЃљрЃџрЃљрЃњрЃћрЃЉрЃБрЃџ dictionary-рЃА key рЃћрЃџрЃћрЃЏрЃћрЃюрЃбрЃћрЃЉрЃўрЃА рЃЏрЃљрЃАрЃўрЃЋрЃА.

func sortedKeys(from dictionary: [String: Int]) -> [String] {
    let sortedKeys = dictionary.keys.sorted()
    return sortedKeys
}

let contacts: [String: Int] = ["рЃќрЃБрЃЎрЃљ:": 239048, "рЃљрЃюрЃў": 5551234, "рЃџрЃљрЃЊрЃЮ": 5555678, "рЃљрЃџрЃћрЃЎрЃЮ": 5550000]
let sortedContactKeys = sortedKeys(from: contacts)
print(sortedContactKeys)

// 7. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Double-рЃћрЃЉрЃўрЃА рЃЏрЃљрЃАрЃўрЃЋрЃў, рЃерЃћрЃљрЃЋрЃАрЃћрЃЌ рЃўрЃА рЃЌрЃЦрЃЋрЃћрЃюрЃЌрЃЋрЃўрЃА рЃАрЃљрЃАрЃБрЃарЃЋрЃћрЃџрЃў рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃўрЃЌ.  loop-рЃўрЃА рЃњрЃљрЃЏрЃЮрЃДрЃћрЃюрЃћрЃЉрЃўрЃЌ рЃўрЃърЃЮрЃЋрЃћрЃЌ рЃДрЃЋрЃћрЃџрЃљрЃќрЃћ рЃЊрЃўрЃЊрЃў рЃарЃўрЃфрЃ«рЃЋрЃў рЃљрЃЏ рЃЏрЃљрЃАрЃўрЃЋрЃерЃў рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ.

var numbers: [Double] = [33.3, 22.5, 11.0, 234,4, 43.6, 234.8]

var maxNumber = numbers[0]
for number in numbers {
    if number > maxNumber {
        maxNumber = number
    }
}

print("The largest number is \(maxNumber)")

//MARK: - рЃљрЃарЃљрЃАрЃљрЃЋрЃљрЃџрЃЊрЃћрЃЉрЃБрЃџрЃЮ рЃљрЃЏрЃЮрЃфрЃљрЃюрЃћрЃЉрЃў

// рЃЏрЃЮрЃфрЃћрЃЏрЃБрЃџрЃўрЃљ Dictionary рЃАрЃљрЃЊрЃљрЃф рЃгрЃљрЃарЃЏрЃЮрЃЊрЃњрЃћрЃюрЃўрЃџрЃўрЃљ рЃџрЃћрЃџрЃљ рЃгрЃБрЃарЃгрЃБрЃЏрЃўрЃљрЃА рЃАрЃўрЃЏрЃдрЃћрЃарЃћрЃЉрЃўрЃАрЃљ рЃЊрЃљ рЃЏрЃљрЃЌрЃў рЃ«рЃљрЃюрЃњрЃарЃФрЃџрЃўрЃЋрЃЮрЃЉрЃљ(рЃгрЃЏ) рЃЏрЃЮрЃюрЃљрЃфрЃћрЃЏрЃћрЃЉрЃў:

let lelaWhatMovementIsThis: [String: Int] = [
    
    "рЃдрЃљрЃЏрЃўрЃА рЃАрЃўрЃЕрЃБрЃЏрЃћ рЃњрЃљрЃцрЃљрЃюрЃбрЃћ": 235,
    
    "рЃЋрЃўрЃ«рЃАрЃћрЃюрЃћрЃЉ рЃДрЃЋрЃћрЃџрЃљрЃцрЃћрЃарЃА рЃЌрЃљрЃЋрЃўрЃЊрЃљрЃю": 219,
    
    "рЃАрЃБрЃџрЃћрЃџрЃў рЃгрЃЋрЃўрЃЏрЃљ": 231,
    
    "рЃљрЃџрЃљрЃџ рЃЏрЃћ": 231,
    
    "рЃўрЃЊрЃБрЃЏрЃљрЃџрЃў рЃдрЃљрЃЏрЃћ": 221,
    
    "рЃЕрЃБрЃЏрЃљрЃЊ рЃюрЃљрЃЌрЃЦрЃЋрЃљрЃЏрЃў": 199,
    
    "рЃЌрЃћрЃЌрЃарЃў рЃЦрЃљрЃарЃљрЃЋрЃљрЃюрЃў": 221,
    
    "рЃФрЃЋрЃћрЃџрЃў рЃЋрЃћрЃарЃ«рЃЋрЃћрЃЉрЃў": 193
    
]

// 1. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃЏрЃЮрЃўрЃЌрЃЋрЃџрЃўрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃАрЃўрЃЏрЃдрЃћрЃарЃћрЃЉрЃўрЃА рЃ»рЃљрЃЏрЃБрЃа рЃ«рЃљрЃюрЃњрЃарЃФрЃџрЃўрЃЋрЃЮрЃЉрЃљрЃА рЃгрЃБрЃЌрЃћрЃЉрЃерЃў рЃЊрЃљ рЃгрЃљрЃЏрЃћрЃЉрЃерЃў

var sum = 0

func songTimer() {
    for (_, time) in lelaWhatMovementIsThis {
        sum += time
    }
    print("рЃгрЃљрЃЏрЃћрЃЉрЃў: \(sum)")
    print("рЃгрЃБрЃЌрЃћрЃЉрЃў: \(sum / 60)")
}

songTimer()

// 2. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃўрЃърЃЮрЃЋрЃўрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃДрЃЋрЃћрЃџрЃљрЃќрЃћ рЃ«рЃљрЃюрЃњрЃарЃФрЃџрЃўрЃЋрЃў рЃЊрЃљ рЃ«рЃљрЃюрЃЏрЃЮрЃЎрЃџрЃћ рЃАрЃўрЃЏрЃдрЃћрЃарЃўрЃА рЃАрЃљрЃ«рЃћрЃџрЃА.

func shortestAndLongestMusicNames() {
    
    if lelaWhatMovementIsThis.isEmpty {
        print("The dictionary is empty.")
        return
    }
    
    var shortestTime = Int.max
    var longestTime = Int.min
    var shortestSong = ""
    var longestSong = ""
    
    for (song, duration) in lelaWhatMovementIsThis {
        
        if duration < shortestTime {
            shortestTime = duration
            shortestSong = song
        }
        
        if duration > longestTime {
            longestTime = duration
            longestSong = song
        }
    }
    
    print("Shortest song: \(shortestSong) with duration: \(shortestTime) seconds")
    print("Longest song: \(longestSong) with duration: \(longestTime) seconds")
}

shortestAndLongestMusicNames()


// 3. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃЏрЃЮрЃўрЃЌрЃЋрЃџрЃўрЃА рЃАрЃўрЃЏрЃдрЃћрЃарЃћрЃЉрЃўрЃА рЃАрЃљрЃерЃБрЃљрЃџрЃЮ рЃ«рЃљрЃюрЃњрЃарЃФрЃџрЃўрЃЋрЃЮрЃЉрЃљрЃА.

func avarageSongTime() {
    var lelaBecomesAnArray = lelaWhatMovementIsThis.values.sorted()
    let avarageTime = Double(sum) / Double(lelaBecomesAnArray.count)
    print(avarageTime)
}

avarageSongTime()

// 4. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃерЃћрЃЏрЃЌрЃ«рЃЋрЃћрЃЋрЃўрЃЌрЃљрЃЊ рЃљрЃЏрЃЮрЃљрЃарЃЕрЃћрЃЋрЃА рЃАрЃўрЃЏрЃдрЃћрЃарЃљрЃА рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃЏрЃўрЃА рЃАрЃљрЃ«рЃћрЃџрЃА.

func randomSong() {
    if let randomSongAndTime = lelaWhatMovementIsThis.randomElement() {
        let songName = randomSongAndTime.key
        let songDuration = randomSongAndTime.value
        print("Random song: \(songName) with duration: \(songDuration) seconds")
    } else {
        print("The dictionary is empty.")
    }
}

randomSong()
